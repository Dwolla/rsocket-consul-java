plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.4'
}

group = 'com.dwolla'
version = '0.0.4'

repositories {
    jcenter()
}

ext {
    rsocketVersion = "1.0.0-RC1"
}

dependencies {
    api group: 'io.rsocket', name: 'rsocket-core', version: rsocketVersion
    api group: 'io.rsocket', name: 'rsocket-load-balancer', version: rsocketVersion
    api group: 'io.rsocket', name: 'rsocket-transport-netty', version: rsocketVersion

    implementation 'org.asynchttpclient:async-http-client:2.8.1'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'org.slf4j:slf4j-api:1.7.26'
    
    testImplementation 'org.junit.jupiter:junit-jupiter:5.4.2'
    testImplementation 'org.mockito:mockito-core:2.27.0'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                description = 'A library for streaming healthy service instances in Consul to the RSocket load balancer'
                name = project.name
                url = 'https://github.com/Dwolla/rsocket-consul-java'
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')

    publications = ['mavenJava']
    publish = true
    override = true

    pkg {
        repo = 'maven'
        name = 'rsocket-consul-java'
        userOrg = 'dwolla'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/Dwolla/rsocket-consul-java.git'

        version {
            name = project.version
            released = new Date()
            vcsTag = project.version
        }
    }
}
